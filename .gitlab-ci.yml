stages:
  - lint
  - test
  - deploy

variables:
  api_pkgs: >-
    ./node
    ./node/api
    ./node/api/server
  package_pkgs: >-
    ./build
    ./cmd/node-scanner
    ./cmd/spc
    ./cmd/spd
    ./compatibility
    ./crypto
    ./modules
    ./modules/consensus
    ./modules/explorer
    ./modules/gateway
    ./modules/host
    ./modules/host/contractmanager
    ./modules/host/mdm
    ./modules/renter
    ./modules/renter/contractor
    ./modules/renter/filesystem
    ./modules/renter/filesystem/siafile
    ./modules/renter/filesystem/siadir
    ./modules/renter/hostdb
    ./modules/renter/hostdb/hosttree
    ./modules/renter/proto
    ./modules/miner
    ./modules/wallet
    ./modules/transactionpool
    ./persist
    ./sync
    ./types
  siatest_pkgs: >-
    ./siatest
    ./siatest/consensus
    ./siatest/daemon
    ./siatest/gateway
    ./siatest/host
    ./siatest/miner
    ./siatest/transactionpool
    ./siatest/wallet
  siatest_renter_pkgs: >-
    ./siatest/renter
  siatest_renter_sub_pkgs: >-
    ./siatest/renter/contractor
    ./siatest/renter/hostdb
    ./siatest/renterhost

default: &default_params
  ## Run tests with most recent golang version to take advantage of any perf
  ## improvements.
  image: golang:1.20
  before_script:
    - go version
    - mkdir -p .cache/gocache
    - export PATH=$PATH:$CI_PROJECT_DIR/.cache/bin/
    - export GOPATH="$CI_PROJECT_DIR/.cache"

## Default common test params for regular and nightly pipelines
.default_test_common: &default_test_common_params
  artifacts:
    name: "SiaTesting-$CI_JOB_NAME"
    paths:
      - $CI_PROJECT_DIR/SiaTesting
      - $CI_PROJECT_DIR/cover/cover.out
    when: always

  after_script:
    - cp -R /tmp/SiaTesting $CI_PROJECT_DIR/SiaTesting

## Default common test params for regular and nightly pipelines
## for Windows runner.
.default_test_common_windows: &default_test_common_windows_params
  artifacts:
    name: "SiaTesting-$CI_JOB_NAME"
    paths:
      - $CI_PROJECT_DIR/SiaTesting
      - $CI_PROJECT_DIR/cover/cover.out
    when: always

  after_script:
    - XCOPY "C:\Windows\Temp\SiaTesting\*" "$CI_PROJECT_DIR\SiaTesting" /S /I /Y > $null

## Default params for Windows runner
.default_windows: &default_windows_params
  before_script:
    - $env:USERNAME
    - New-Item -ItemType Directory -Force .cache\gocache
    - $env:PATH += ";$CI_PROJECT_DIR\.cache\bin"
    - $env:PATH
    - $env:GOPATH = "$CI_PROJECT_DIR\.cache"
    - $env:GOPATH

## Define the default test parameters.
.default_test: &default_test_params
  ## Merge the contents of the 'default_params' alias
  <<: *default_params
  <<: *default_test_common_params
  stage: test

  ## disable default tests for scheduled pipelines (nightlies)
  except:
    - schedules

## Define the default test parameters
## for Windows runner.
.default_windows_test: &default_test_windows_params
  ## Merge the contents of the 'default_windows_params' alias
  <<: *default_windows_params
  <<: *default_test_common_windows_params
  stage: test
  tags:
    - nebulous-windows

  ## disable default tests for scheduled pipelines (nightlies)
  except:
    - schedules

## Define the default nightly test parameters.
.default_nightly_test: &default_nightly_params
  <<: *default_test_params
  <<: *default_test_common_params
  ## Only run during scheduled pipelines.
  except:
   -  ""
  only:
   - schedules

## Define the default nightly test parameters
## for Windows runner.
.default_nightly_windows_test: &default_nightly_windows_params
  ## Merge the contents of aliases
  <<: *default_test_windows_params
  <<: *default_test_common_windows_params
  ## Only run during scheduled pipelines.
  except:
   -  ""
  only:
   - schedules

lint:
  stage: lint
  cache:
    key: lint-cache
    paths:
      - .cache

  before_script:
    - mkdir -p .cache/gocache      
    - export GOCACHE=$CI_PROJECT_DIR/.cache/gocache
    - wget -O- -nv https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.52.2
    - apt-get update
    - apt-get -y install python3-pip
    - pip3 install codespell --break-system-packages
  script:
    - ./bin/golangci-lint run -c .golangci.yml ./...
#disable for now    - make lint-analysis
    - make markdown-spellcheck
    - make test

build:
  stage: lint
  image: golang:1.20
  artifacts:
    name: "Binaries"
    paths:
      - $CI_PROJECT_DIR/artifacts
  script:
    - ./check-builds.sh

api-tests:
  <<: *default_test_params
  cache:
    key: api-cache
    paths:
      - .cache
  script:
    - make test-long run=. pkgs="$api_pkgs"

package-tests:
  <<: *default_test_params
  cache:
    key: package-cache
    paths:
      - .cache
  script:
    - make test-long run=. pkgs="$package_pkgs"
siatest-tests:
  <<: *default_test_params
  cache:
    key: siatest-cache
    paths:
      - .cache
  script:
    - make test-long run=. pkgs="$siatest_pkgs"

siatest-renter-tests:
  <<: *default_test_params
  cache:
    key: siatest-renter-tests-cache
    paths:
      - .cache
  script:
    - apt-get update
    - apt-get install -y fuse
    - make test-long run=. pkgs="$siatest_renter_pkgs"

siatest-renter-sub-tests:
  <<: *default_test_params
  cache:
    key: siatest-renter-sub-tests-cache
    paths:
      - .cache
  script:
    - apt-get update
    - apt-get install -y fuse
    - make test-long run=. pkgs="$siatest_renter_sub_pkgs"

api-tests-nightly:
  <<: *default_nightly_params
  script:
    - make test-vlong run=. pkgs="$api_pkgs"

# Windows execution
legacy-windows-tests-nightly:
  <<: *default_nightly_windows_params
  script:
    - make test-vlong run=. pkgs="$legacy_pkgs"

package-tests-nightly:
  <<: *default_nightly_params
  script:
    - make test-vlong run=. pkgs="$package_pkgs"

# Windows execution
package-windows-tests-nightly:
  <<: *default_nightly_windows_params
  script:
    - make test-vlong run=. pkgs="$package_pkgs"

siatest-tests-nightly:
  <<: *default_nightly_params
  script:
    - make test-vlong run=. pkgs="$siatest_pkgs"

# Windows execution
siatest-windows-tests-nightly:
  <<: *default_nightly_windows_params
  script:
    - make test-vlong run=. pkgs="$siatest_pkgs"

siatest-renter-tests-nightly:
  <<: *default_nightly_params
  script:
    - apt-get update
    - apt-get install -y fuse
    - make test-vlong run=. pkgs="$siatest_renter_pkgs"

deploy:
  stage: deploy
  only:
    refs:
      - master@scpcorp/ScPrime
  artifacts:
    name: "Binaries"
    paths:
      - $CI_PROJECT_DIR/artifacts
  script:
    - ./build.sh "$NIGHTLY_SIGNING_KEY"
